@page "/"
@using APShared.Models
@using Newtonsoft.Json;
@using System.Text;
@using Microsoft.Azure.ServiceBus;
@inject Services.Services.IQueueService queueService
@inject Microsoft.Extensions.Configuration.IConfiguration config

<h1>Employee Register</h1>

<EditForm Model="@employee" OnValidSubmit="@SubmitMessage">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstname" class="form-control" @bind-Value="employee.FirstName"></InputText>
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastname" class="form-control" @bind-Value="employee.LastName"></InputText>
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="employee.Email"></InputText>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>
@code{
    Employee employee = new Employee();
    private async Task SubmitMessage()
    {
        try
        {
            //await queueService.SendMessageASync(config["ConnectionStrings:AzureConnectionString"], employee, config["AzureQueues:TestQueue"]);
            var message = new Message(Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(employee)));
            message.SessionId = Guid.NewGuid().ToString();
            var topicClient = new TopicClient(config.GetSection("ConnectionStrings:AzureConnectionString").Value, config.GetSection("AzureTopics:TopicName").Value);
            //var msg = new BrokeredMessage(empJson);
            await topicClient.SendAsync(message);

            employee = new Employee();
        }
        catch (Exception ex)
        {

            Console.WriteLine(ex.ToString());
        }

    }
}